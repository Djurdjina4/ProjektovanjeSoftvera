/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Izvrsava;
import domen.Klijent;
import domen.StavkaZahteva;
import domen.Usluga;
import domen.Zahtev;
import domen.Zaposleni;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumn;
import kontroler.Kontroler;
import modeli.ModelTabeleIzvrsava;
import transfer.ServerskiOdgovor;

/**
 *
 * @author djurd
 */
public class FrmUnosZahteva extends javax.swing.JDialog {

    Klijent klijent;
    Zahtev zahtevZaIzmenu;
    Zaposleni zaposleni;
    double ukupnaCena = 0.0;

    /**
     * Creates new form UnosZahtevaForma
     */
    public FrmUnosZahteva(java.awt.Frame parent, boolean modal) throws InterruptedException {
        super(parent, modal);
        initComponents();
        srediFormu();

    }

    public FrmUnosZahteva(GlavnaForma gf, boolean b, Klijent k) throws InterruptedException {
        this(gf, b);
        this.klijent = k;
        srediPodatke(k);
        btnIzmeni.setEnabled(false);
        btnSacuvaj.setEnabled(true);
        this.zaposleni = gf.getTrenutnoUlogovani();
        txtUkupnaCena.setText(ukupnaCena + "");
        txtZahtevID.setText(-1 + "");
        btnUkloni.setVisible(false);
    }

    public FrmUnosZahteva(GlavnaForma gf, boolean b, Klijent k, Zahtev z) throws InterruptedException {
        this(gf, b);
        this.klijent = k;
        this.zahtevZaIzmenu = z;
        srediPodatke(k);
        srediPodatkeZahtev(z);
        btnIzmeni.setEnabled(true);
        btnSacuvaj.setEnabled(false);
        btnDodajStavku.setVisible(false);
        btnObrisiStavku.setVisible(false);
        this.zaposleni = gf.getTrenutnoUlogovani();
        txtUkupnaCena.setText(ukupnaCena + "");
        btnUkloni.setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelUnosZahteva = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtDatumDO = new javax.swing.JTextField();
        txtDatumOD = new javax.swing.JTextField();
        txtUkupnaCena = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblIzvrsava = new javax.swing.JTable();
        btnDodajStavku = new javax.swing.JButton();
        btnObrisiStavku = new javax.swing.JButton();
        btnSacuvaj = new javax.swing.JButton();
        btnOdustani = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtZahtevID = new javax.swing.JTextField();
        btnIzmeni = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        btnUkloni = new javax.swing.JButton();
        panelKlijent = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtOsoba = new javax.swing.JTextField();
        txtKompanija = new javax.swing.JTextField();
        txtKlijentID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtBrojTelefona = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtGrad = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panelUnosZahteva.setBackground(new java.awt.Color(0, 153, 255));
        panelUnosZahteva.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Unos zahteva", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Consolas", 2, 18), new java.awt.Color(0, 0, 0))); // NOI18N
        panelUnosZahteva.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel7.setText("Datum od:");

        jLabel8.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel8.setText("Datum do:");

        jLabel9.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel9.setText("Ukupna cena:");

        txtUkupnaCena.setEditable(false);

        tblIzvrsava.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        tblIzvrsava.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblIzvrsava.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tblIzvrsavaFocusLost(evt);
            }
        });
        tblIzvrsava.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                tblIzvrsavaInputMethodTextChanged(evt);
            }
        });
        tblIzvrsava.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tblIzvrsavaKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(tblIzvrsava);

        btnDodajStavku.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        btnDodajStavku.setText("Dodaj stavku");
        btnDodajStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajStavkuActionPerformed(evt);
            }
        });

        btnObrisiStavku.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        btnObrisiStavku.setText("Obriši stavku");
        btnObrisiStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiStavkuActionPerformed(evt);
            }
        });

        btnSacuvaj.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        btnSacuvaj.setText("Sačuvaj zahtev");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        btnOdustani.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        btnOdustani.setText("Odustani");
        btnOdustani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOdustaniActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel6.setText("(yyyy-mm-dd)");

        jLabel11.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel11.setText("Zahtev ID:");

        txtZahtevID.setEditable(false);
        txtZahtevID.setEnabled(false);

        btnIzmeni.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        btnIzmeni.setText("Izmeni zahtev");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel12.setText("(yyyy-mm-dd)");

        btnUkloni.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        btnUkloni.setText("Ukloni stavku");
        btnUkloni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUkloniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelUnosZahtevaLayout = new javax.swing.GroupLayout(panelUnosZahteva);
        panelUnosZahteva.setLayout(panelUnosZahtevaLayout);
        panelUnosZahtevaLayout.setHorizontalGroup(
            panelUnosZahtevaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelUnosZahtevaLayout.createSequentialGroup()
                .addGroup(panelUnosZahtevaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelUnosZahtevaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelUnosZahtevaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelUnosZahtevaLayout.createSequentialGroup()
                                .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(btnOdustani, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(panelUnosZahtevaLayout.createSequentialGroup()
                        .addGroup(panelUnosZahtevaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelUnosZahtevaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(panelUnosZahtevaLayout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                                    .addComponent(txtDatumOD, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(panelUnosZahtevaLayout.createSequentialGroup()
                                    .addComponent(jLabel11)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                                    .addComponent(txtZahtevID, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel6)
                            .addGroup(panelUnosZahtevaLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnUkloni)))
                        .addGap(18, 18, 18)
                        .addGroup(panelUnosZahtevaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelUnosZahtevaLayout.createSequentialGroup()
                                .addComponent(btnDodajStavku, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnObrisiStavku))
                            .addComponent(jLabel12)
                            .addGroup(panelUnosZahtevaLayout.createSequentialGroup()
                                .addGroup(panelUnosZahtevaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8))
                                .addGap(29, 29, 29)
                                .addGroup(panelUnosZahtevaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDatumDO, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtUkupnaCena, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(23, 23, 23))
        );
        panelUnosZahtevaLayout.setVerticalGroup(
            panelUnosZahtevaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUnosZahtevaLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(panelUnosZahtevaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtUkupnaCena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(txtZahtevID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(panelUnosZahtevaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDatumDO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(txtDatumOD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(panelUnosZahtevaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel12))
                .addGap(19, 19, 19)
                .addGroup(panelUnosZahtevaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodajStavku)
                    .addComponent(btnObrisiStavku)
                    .addComponent(btnUkloni))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelUnosZahtevaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOdustani)
                    .addComponent(btnSacuvaj)
                    .addComponent(btnIzmeni))
                .addContainerGap())
        );

        panelKlijent.setBackground(new java.awt.Color(0, 153, 255));
        panelKlijent.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Klijent", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Consolas", 2, 18), new java.awt.Color(0, 0, 0))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel10.setText("Klijent ID:");

        jLabel1.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel1.setText("Kompanija:");

        jLabel2.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel2.setText("Osoba:");

        txtOsoba.setEnabled(false);

        txtKompanija.setEnabled(false);

        txtKlijentID.setEditable(false);

        jLabel3.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel3.setText("Grad:");

        jLabel4.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel4.setText("Email:");

        jLabel5.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel5.setText("Broj telefona:");

        txtBrojTelefona.setEnabled(false);

        txtEmail.setEnabled(false);

        txtGrad.setEnabled(false);

        javax.swing.GroupLayout panelKlijentLayout = new javax.swing.GroupLayout(panelKlijent);
        panelKlijent.setLayout(panelKlijentLayout);
        panelKlijentLayout.setHorizontalGroup(
            panelKlijentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelKlijentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelKlijentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel10))
                .addGap(36, 36, 36)
                .addGroup(panelKlijentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtOsoba)
                    .addComponent(txtKompanija)
                    .addComponent(txtKlijentID, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelKlijentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(24, 24, 24)
                .addGroup(panelKlijentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtGrad, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBrojTelefona, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(9, Short.MAX_VALUE))
        );
        panelKlijentLayout.setVerticalGroup(
            panelKlijentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelKlijentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelKlijentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtGrad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txtKlijentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(panelKlijentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelKlijentLayout.createSequentialGroup()
                        .addGroup(panelKlijentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelKlijentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtBrojTelefona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtOsoba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(panelKlijentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtKompanija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelKlijent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelUnosZahteva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelKlijent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelUnosZahteva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnObrisiStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiStavkuActionPerformed
        int red = tblIzvrsava.getSelectedRow();
        if (red == -1) {
            JOptionPane.showMessageDialog(this, "Morate selektovati red u tabeli!");
            return;
        }
        ModelTabeleIzvrsava mti = (ModelTabeleIzvrsava) tblIzvrsava.getModel();
        mti.obrisiRed(red);
        srediUkupnuCenu(mti.getLista());

    }//GEN-LAST:event_btnObrisiStavkuActionPerformed

    private void btnDodajStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajStavkuActionPerformed
        ModelTabeleIzvrsava mti = (ModelTabeleIzvrsava) tblIzvrsava.getModel();
        srediUkupnuCenu(mti.getLista());
        int rb = vratiSledeciRB();
        mti.dodaj(rb);
    }//GEN-LAST:event_btnDodajStavkuActionPerformed

    private void btnOdustaniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOdustaniActionPerformed
        this.setVisible(false);

    }//GEN-LAST:event_btnOdustaniActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        ModelTabeleIzvrsava model = (ModelTabeleIzvrsava) tblIzvrsava.getModel();
        ArrayList<Izvrsava> lista = model.getLista();
        srediUkupnuCenu(lista);
        double ukupnaCena = Double.parseDouble(txtUkupnaCena.getText().trim());
        Date datumOD;
        Date datumDO;
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        try {
            datumOD = sdf.parse(txtDatumOD.getText().trim());
            datumDO = sdf.parse(txtDatumDO.getText().trim());

            if (datumDO.before(datumOD)) {
                JOptionPane.showMessageDialog(this, "Datum DO je pre datuma OD!");
                return;
            }

            if (sdf.format(datumDO).equals(sdf.format(datumOD))) {
                JOptionPane.showMessageDialog(this, "Datum DO i datum OD je isti datum!");
                return;
            }

            long razlika = (long) (Math.abs(datumDO.getTime() - datumOD.getTime()));
            long dani = TimeUnit.DAYS.convert(razlika, TimeUnit.MILLISECONDS);
            if (dani / 30.0 < 1.0) {
                JOptionPane.showMessageDialog(this, "Minimali period saradnje je mesec dana!");
                return;
            }

            ArrayList<StavkaZahteva> listaStavki = new ArrayList<>();
            for (Izvrsava i : lista) {
                listaStavki.add(i.getStavka());
            }
            int brZaposlenih = 0;
            for (Izvrsava i : lista) {
                if (i.getZaposleni() != null) {
                    brZaposlenih++;
                }
            }
            if (brZaposlenih < lista.size()) {
                JOptionPane.showMessageDialog(this, "Niste uneli zaposlene za sve stavke!");
                return;
            }

            Zahtev zahtev = new Zahtev(-1, datumOD, datumDO, ukupnaCena, klijent, listaStavki, lista);
            ServerskiOdgovor so = kontroler.Kontroler.getInstanca().unesiZahtev(zahtev);
            if (so.isUspesnost() == false) {
                JOptionPane.showMessageDialog(this, "Sistem ne može da sačuva zahtev!");
            } else {
                JOptionPane.showMessageDialog(this, "Sistem je sačuvao zahtev!");
            }

            this.setVisible(false);
            JDialog d = new FrmPretragaZahteva((GlavnaForma) this.getParent(), true, klijent);
            d.setVisible(true);

        } catch (ParseException ex) {
            Logger.getLogger(FrmUnosZahteva.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Datum nije u dobrom formatu!");
        } catch (InterruptedException ex) {
            Logger.getLogger(FrmUnosZahteva.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
//ako se obrisu sve stavke, zahtev onda nema smisla-treba ga obrisati

        ModelTabeleIzvrsava model = (ModelTabeleIzvrsava) tblIzvrsava.getModel();
        ArrayList<Izvrsava> lista = model.getLista();
        srediUkupnuCenu(lista);
        double ukupnaCena = Double.parseDouble(txtUkupnaCena.getText().trim());
        Date datumOD;
        Date datumDO;
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        try {
            datumOD = sdf.parse(txtDatumOD.getText().trim());
            datumDO = sdf.parse(txtDatumDO.getText().trim());

            if (datumDO.before(datumOD)) {
                JOptionPane.showMessageDialog(this, "Datum DO je pre datuma OD!");
                return;
            }

            ArrayList<StavkaZahteva> listaStavki = new ArrayList<>();
            for (Izvrsava i : lista) {
                listaStavki.add(i.getStavka());
            }
            int brZaposlenih = 0;
            for (Izvrsava i : lista) {
                if (i.getZaposleni() != null) {
                    brZaposlenih++;
                }
            }
            if (brZaposlenih < lista.size()) {
                JOptionPane.showMessageDialog(this, "Niste uneli zaposlene za sve stavke!");
                return;
            }

            Zahtev z = new Zahtev(zahtevZaIzmenu.getZahtevID(), datumOD, datumDO, ukupnaCena,
                    klijent, listaStavki, lista);

            if (z.getStavke().isEmpty() && z.getIzvrsava().isEmpty()) {
                //brisanje
                ServerskiOdgovor so1 = kontroler.Kontroler.getInstanca().obrisiZahtev(z);
                if (so1.isUspesnost() == false) {
                    JOptionPane.showMessageDialog(this, "Sistem ne može da obriše zahtev!");

                } else {
                    JOptionPane.showMessageDialog(this, "Sistem je obrisao zahtev!");
                    JDialog d = new FrmPretragaZahteva((GlavnaForma) this.getParent(), true, klijent);
                    this.setVisible(false);
                    d.setVisible(true);
                }
            } else {
                //izmena
                ServerskiOdgovor so = kontroler.Kontroler.getInstanca().izmeniZahtev(z);

                if (so.isUspesnost() == false) {
                    JOptionPane.showMessageDialog(this, "Sistem  ne može da zapamti izmenjeni zahtev!");

                } else {
                    JOptionPane.showMessageDialog(this, "Sistem je zapamtio izmenjeni zahtev!");
                    JDialog d = new FrmPretragaZahteva((GlavnaForma) this.getParent(), true, klijent);
                    this.setVisible(false);
                    d.setVisible(true);
                }

            }

        } catch (ParseException ex) {
            Logger.getLogger(FrmUnosZahteva.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Datum nije u dobrom formatu!");
            return;
        } catch (InterruptedException ex) {
            Logger.getLogger(FrmUnosZahteva.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void tblIzvrsavaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblIzvrsavaFocusLost
        // TODO add your handling code here:
        ModelTabeleIzvrsava mti = (ModelTabeleIzvrsava) tblIzvrsava.getModel();
        srediUkupnuCenu(mti.getLista());
    }//GEN-LAST:event_tblIzvrsavaFocusLost

    private void tblIzvrsavaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblIzvrsavaKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_tblIzvrsavaKeyTyped

    private void tblIzvrsavaInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_tblIzvrsavaInputMethodTextChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_tblIzvrsavaInputMethodTextChanged

    private void btnUkloniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUkloniActionPerformed
        // TODO add your handling code here:
        ModelTabeleIzvrsava mti = (ModelTabeleIzvrsava) tblIzvrsava.getModel();
        ArrayList<Izvrsava> lista = mti.getLista();
        int red = tblIzvrsava.getSelectedRow();
        if (red == -1) {
            JOptionPane.showMessageDialog(this, "Morate selektovati red u tabeli!");
            return;
        }
        Izvrsava izvrsava = lista.get(red);

        try {
            ServerskiOdgovor so1 = kontroler.Kontroler.getInstanca().obrisiStavku(izvrsava);
            if (so1.isUspesnost()) {
                JOptionPane.showMessageDialog(this, "Uspešno brisanje!");
                ukupnaCena = ukupnaCena - (izvrsava.getStavka().getUcestalost() * izvrsava.getStavka().getUsluga().getCena());
                txtUkupnaCena.setText(ukupnaCena + "");
                mti.obrisiRed(red);

            } else {
                JOptionPane.showMessageDialog(this, "Došlo je do greške!");
                return;
            }
        } catch (Exception ex) {
            Logger.getLogger(FrmUnosZahteva.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnUkloniActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajStavku;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnObrisiStavku;
    private javax.swing.JButton btnOdustani;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JButton btnUkloni;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelKlijent;
    private javax.swing.JPanel panelUnosZahteva;
    private javax.swing.JTable tblIzvrsava;
    private javax.swing.JTextField txtBrojTelefona;
    private javax.swing.JTextField txtDatumDO;
    private javax.swing.JTextField txtDatumOD;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtGrad;
    private javax.swing.JTextField txtKlijentID;
    private javax.swing.JTextField txtKompanija;
    private javax.swing.JTextField txtOsoba;
    private javax.swing.JTextField txtUkupnaCena;
    private javax.swing.JTextField txtZahtevID;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() throws InterruptedException {
        setLocationRelativeTo(null);
        setTitle("BG Media");
        srediTabelu();
    }

    private void srediPodatke(Klijent k) {
        if (k != null) {
            txtKlijentID.setText(k.getKlijentID() + "");
            txtKompanija.setText(k.getKompanija());
            txtOsoba.setText(k.getOsoba());
            txtGrad.setText(k.getGrad());
            txtEmail.setText(k.getEmail());
            txtBrojTelefona.setText(k.getBrojTelefona());

            txtKlijentID.setEditable(false);
            txtKompanija.setEditable(false);
            txtOsoba.setEditable(false);
            txtGrad.setEditable(false);
            txtEmail.setEditable(false);
            txtBrojTelefona.setEditable(false);

        }
    }

    private void srediTabelu() throws InterruptedException {
        ModelTabeleIzvrsava mti = new ModelTabeleIzvrsava();
        tblIzvrsava.setModel(mti);

        ServerskiOdgovor so = Kontroler.getInstanca().ucitajUsluge();
        ArrayList<Usluga> lista = (ArrayList<Usluga>) so.getOdgovor();
        JComboBox<Object> kombo = new JComboBox<>();
        if (lista.isEmpty()) {
            return;
        }
        for (Usluga u : lista) {
            kombo.addItem(u);
        }
        TableColumn tc = tblIzvrsava.getColumnModel().getColumn(2);
        tc.setCellEditor(new DefaultCellEditor(kombo));

        ServerskiOdgovor so1 = Kontroler.getInstanca().ucitajZaposlene();
        ArrayList<Zaposleni> listaZap = (ArrayList<Zaposleni>) so1.getOdgovor();
        JComboBox<Object> komboZap = new JComboBox<>();
        if (listaZap.isEmpty()) {
            return;
        }
        for (Zaposleni z : listaZap) {
            komboZap.addItem(z);
        }
        TableColumn tcZ = tblIzvrsava.getColumnModel().getColumn(4);
        tcZ.setCellEditor(new DefaultCellEditor(komboZap));

    }

    private void srediUkupnuCenu(ArrayList<Izvrsava> lista) {
        double ukupnaCena = 0;
        for (Izvrsava i : lista) {
            if (i != null && i.getStavka().getUcestalost() <= 0) {
                JOptionPane.showMessageDialog(this, "Učestalost mora biti veća od 0!");
                return;
            }

            if (i != null && i.getStavka().getUsluga() != null && i.getStavka().getUcestalost() > 0) {
                ukupnaCena += i.getStavka().getUsluga().getCena() * i.getStavka().getUcestalost();
            }
        }
        this.ukupnaCena = ukupnaCena;
        txtUkupnaCena.setText(ukupnaCena + "");
    }

    private int vratiSledeciRB() {
        ModelTabeleIzvrsava mti = (ModelTabeleIzvrsava) tblIzvrsava.getModel();
        ArrayList<Izvrsava> lista = mti.getLista();
        return lista.size() + 1;
    }

    private void srediPodatkeZahtev(Zahtev z) throws InterruptedException {
        if (z != null) {
            txtZahtevID.setText(z.getZahtevID() + "");
            txtUkupnaCena.setText(z.getUkupnaCena() + "");
            txtDatumOD.setText(z.getDatumOD() + "");
            txtDatumDO.setText(z.getDatumDO() + "");

            txtZahtevID.setEditable(false);
            txtUkupnaCena.setEditable(false);
            txtDatumDO.setEditable(true);
            txtDatumOD.setEditable(true);

            ukupnaCena = z.getUkupnaCena();

            ServerskiOdgovor so2 = Kontroler.getInstanca().ucitajIzvrsavaZaZahtev(z);
            ArrayList<Izvrsava> lista = (ArrayList<Izvrsava>) so2.getOdgovor();

            ModelTabeleIzvrsava mti = new ModelTabeleIzvrsava(lista);
            tblIzvrsava.setModel(mti);

            ServerskiOdgovor so = Kontroler.getInstanca().ucitajUsluge();
            ArrayList<Usluga> usluge = (ArrayList<Usluga>) so.getOdgovor();
            JComboBox<Object> kombo = new JComboBox<>();
            if (usluge.isEmpty()) {
                return;
            }
            for (Usluga u : usluge) {
                kombo.addItem(u);
            }

            TableColumn tc = tblIzvrsava.getColumnModel().getColumn(2);
            tc.setCellEditor(new DefaultCellEditor(kombo));

            ServerskiOdgovor so1 = Kontroler.getInstanca().ucitajZaposlene();
            ArrayList<Zaposleni> listaZap = (ArrayList<Zaposleni>) so1.getOdgovor();
            JComboBox<Object> komboZap = new JComboBox<>();
            if (listaZap.isEmpty()) {
                return;
            }
            for (Zaposleni zap : listaZap) {
                komboZap.addItem(zap);
            }
            TableColumn tcZ = tblIzvrsava.getColumnModel().getColumn(4);
            tcZ.setCellEditor(new DefaultCellEditor(komboZap));

        }

    }
}
