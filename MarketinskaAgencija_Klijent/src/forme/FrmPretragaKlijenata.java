/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Klijent;
import java.awt.Frame;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import kontroler.Kontroler;
import modeli.ModelTabeleKlijent;
import transfer.ServerskiOdgovor;

/**
 *
 * @author djurd
 */
public class FrmPretragaKlijenata extends javax.swing.JDialog {

    /**
     * Creates new form FrmPretragaKlijenata
     */
    public FrmPretragaKlijenata(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        srediFormu();
    }

    public FrmPretragaKlijenata(GlavnaForma aThis, boolean b, boolean b0) {
        this(aThis, b);
        btnIzmeni.setEnabled(b0);
        btnObrisi.setEnabled(b0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtPretraga = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKlijent = new javax.swing.JTable();
        btnPretrazite = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        btnNazad = new javax.swing.JButton();
        btnDetaljnije = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pretraga klijenata", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Consolas", 2, 18))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel1.setText("Pretražite klijente (kompanija/osoba/grad) :");

        tblKlijent.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        tblKlijent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblKlijent);

        btnPretrazite.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        btnPretrazite.setText("Pretraži");
        btnPretrazite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretraziteActionPerformed(evt);
            }
        });

        btnIzmeni.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        btnIzmeni.setText("Izmeni klijenta");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        btnObrisi.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        btnObrisi.setText("Obriši klijenta");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnNazad.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        btnNazad.setText("Nazad");
        btnNazad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNazadActionPerformed(evt);
            }
        });

        btnDetaljnije.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        btnDetaljnije.setText("Detaljnije");
        btnDetaljnije.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetaljnijeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(btnIzmeni)
                        .addGap(52, 52, 52)
                        .addComponent(btnObrisi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDetaljnije, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(btnNazad, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(35, 35, 35)
                        .addComponent(txtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPretrazite, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPretrazite))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIzmeni)
                    .addComponent(btnObrisi)
                    .addComponent(btnDetaljnije)
                    .addComponent(btnNazad))
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPretraziteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretraziteActionPerformed
        try {
            String kriterijum = txtPretraga.getText().trim();
            if (kriterijum.isEmpty()) {
                JOptionPane.showMessageDialog(this,  "Sistem na može da nađe klijente po zadataoj vrednosti!",
                        "Kriterijum pretrage mora biti unet!", JOptionPane.ERROR_MESSAGE);
                srediTabelu();
                return;
            }
            Klijent klijent = new Klijent();
            klijent.setKriterijumPretrage(kriterijum);
            ServerskiOdgovor so = Kontroler.getInstanca().pretraziKlijente(klijent);

            if (so.isUspesnost() == false) {
                JOptionPane.showMessageDialog(null, "Sistem ne može da nađe klijente po zadatoj vrednosti!");
                return;
            } else {
                JOptionPane.showMessageDialog(null, "Sistem je našao klijente po zadatoj vrednosti!");
                ArrayList<Klijent> lista = (ArrayList<Klijent>) so.getOdgovor();
                ModelTabeleKlijent mtk = new ModelTabeleKlijent(lista);
                tblKlijent.setModel(mtk);
            }
        } catch (InterruptedException ex) {
            Logger.getLogger(FrmPretragaKlijenata.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPretraziteActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        if (tblKlijent.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Morate selektovati red u tabeli!");

        } else {
            int odgovor = JOptionPane.showConfirmDialog(null, "Da li stavrno želite da obrišete klijenta?", "Brisanje!", JOptionPane.YES_NO_OPTION);
            if (odgovor == JOptionPane.YES_OPTION) {
                try {
                    ModelTabeleKlijent mtk = (ModelTabeleKlijent) tblKlijent.getModel();
                    ArrayList<Klijent> klijenti = mtk.getLista();
                    Klijent k = klijenti.get(tblKlijent.getSelectedRow());

                    ServerskiOdgovor so = Kontroler.getInstanca().obrisiKlijenta(k);
                    if (so.isUspesnost()) {

                        JOptionPane.showMessageDialog(this, "Sistem je obrisao klijenta!");
                        
                        srediFormu();

                    } else {
                        JOptionPane.showMessageDialog(this, "Sistem ne može da obriše klijenta!", "Greška!", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (InterruptedException ex) {
                    Logger.getLogger(FrmPretragaKlijenata.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
     }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        if (tblKlijent.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Morate selektovati red u tabeli!");

        } else {
            ModelTabeleKlijent mtk = (ModelTabeleKlijent) tblKlijent.getModel();
            ArrayList<Klijent> klijenti = mtk.getLista();
            Klijent k = klijenti.get(tblKlijent.getSelectedRow());

            GlavnaForma gf = (GlavnaForma) this.getParent();
            FrmUnosKlijenta f = new FrmUnosKlijenta(gf, true);
            f.srediFormuZaIzmenu(k);
            f.setVisible(true);
            this.dispose();

        }
    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnNazadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNazadActionPerformed
        this.getParent().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnNazadActionPerformed

    private void btnDetaljnijeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetaljnijeActionPerformed
        if (tblKlijent.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Morate selektovati red u tabeli!");
        } else {
            try {
                ModelTabeleKlijent mtk = (ModelTabeleKlijent) tblKlijent.getModel();
                ArrayList<Klijent> klijenti = mtk.getLista();
                Klijent k = klijenti.get(tblKlijent.getSelectedRow());

                GlavnaForma gf = (GlavnaForma) this.getParent();
                FrmPretragaZahteva fpz = new FrmPretragaZahteva(gf, true, k);
                fpz.setVisible(true);
                this.setVisible(false);

            } catch (InterruptedException ex) {
                JOptionPane.showMessageDialog(this, "Sistem ne može da prikaže odabranog klijenta!");

                Logger.getLogger(FrmPretragaKlijenata.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_btnDetaljnijeActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDetaljnije;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnNazad;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnPretrazite;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblKlijent;
    private javax.swing.JTextField txtPretraga;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        setLocationRelativeTo(null);
        setTitle("BG Media");
        srediTabelu();
        // btnIzmeni.setEnabled(false);
        //btnObrisi.setEnabled(false);
        //btnDetaljnije.setEnabled(false);
    }

    private void srediTabelu() {
        try {
            ServerskiOdgovor so = kontroler.Kontroler.getInstanca().ucitajKlijente();
            ArrayList<Klijent> lista = (ArrayList<Klijent>) so.getOdgovor();
            ModelTabeleKlijent mtk = new ModelTabeleKlijent(lista);
            tblKlijent.setModel(mtk);
        } catch (InterruptedException ex) {
            Logger.getLogger(FrmPretragaKlijenata.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    void srediFormuZaUnos() {
        btnIzmeni.setEnabled(false);
        btnObrisi.setEnabled(false);
    }
}
